name: 'Schemathesis'
description: 'Run Schemathesis API testing'
author: 'Dmitry Dygalo <@Stranger6667> | Schemathesis.io'
branding:
  icon: 'check-square'
  color: 'green'
inputs:
  schema:
    description: 'API schema location'
    required: true
  base-url:
    description: 'Base URL address of the API'
    required: false
  api-name:
    description: 'API name from Schemathesis.io'
    required: false
  checks:
    description: 'List of Schemathesis checks to run. Defaults to `all`'
    required: false
    default: 'all'
  report:
    description: "Whether you'd like to see the results in a Web UI in Schemathesis.io"
    required: false
    default: 'true'
  token:
    description: 'Your Schemathesis.io token'
    required: false
  wait-for-schema:
    description: 'Maximum time in seconds to wait on the API schema availability'
    required: false
    default: '2'
  max-examples:
    description: 'Maximum number of generated examples per each endpoint'
    required: false
    default: '100'
  version:
    description: 'Specify which version of Schemathesis should be used. Defaults to `latest`'
    required: false
    default: "latest"
  args:
    description: 'Extra arguments to pass to Schemathesis'
    required: false
runs:
  using: 'composite'
  steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - run: |
        pip install --upgrade pip 
        python3.10 -m venv env
        source env/bin/activate
        if [ ${{ inputs.version }} == "latest" ] ; then
          pip install schemathesis
        else
          pip install schemathesis==${{ inputs.version }}
        fi
      shell: bash
    - run: ./entrypoint.sh
      shell: bash
      env:
        SCHEMA: ${{ inputs.schema }}
        MAX_EXAMPLES: ${{ inputs.max-examples }}
        CHECKS: ${{ inputs.checks }}
        ARGS: ${{ inputs.args }}
        SCHEMATHESIS_BASE_URL: ${{ inputs.base-url }}
        SCHEMATHESIS_API_NAME: ${{ inputs.api-name }}
        SCHEMATHESIS_REPORT: ${{ inputs.report }}
        SCHEMATHESIS_WAIT_FOR_SCHEMA: ${{ inputs.wait-for-schema }}
        SCHEMATHESIS_TOKEN: ${{ inputs.token }}
